%{
#include "./../ATEXT/atextfun.hats"
%}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<title>EFFECTIVATS-word-counting</title>
#patscode_style()
#patspage_style()
</head>

<body>

<h1>
Effective ATS: Parallel Sorting
</h1>

In this article, I present two implementations of parallel mergesort.
One implementation makes heavy use of explicit synchronization while the
other does not. The former is easier to code, but it is significantly less
efficient than the latter in terms of the level of concurrency achieved.

<hr size="2">

This article is written by <a href="http://www.cs.bu.edu/~hwxi/">Hongwei Xi</a>.

#patspage_script()
</body>
</html>

%{
implement main () = fprint_filsub (stdout_ref, "main_atxt.txt")
%}
